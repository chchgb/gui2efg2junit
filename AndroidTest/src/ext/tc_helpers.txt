	public void retrieveWidgets () {
		theViews.clear();
		for (View w: solo.getCurrentViews()) {
			theViews.put(w.getId(), w);
			if (w instanceof TabHost) setTabs((TabHost)w);
		}
	}
	
	public void setTabs (TabHost t) {
		this.tabs = t;
		this.tabNum = t.getTabWidget().getTabCount();		
	}

	public Map<Integer,View> getWidgets () {
		return this.theViews;
	}
	
	public View getWidget (int key) {
		return getWidgets().get(key);
	}
	
	public void doTestWidget (int theId, String theType, String theName) {
		if (theId == -1)
		return;
		View v = getWidget(theId);
		assertNotNull("Checking for id", v);
		
		String type = v.toString();
		type = type.substring(0, type.indexOf('@'));
		assertEquals("Checking for type", theType, type);
		
		if (theName != "") {
			MoreAsserts.assertAssignableFrom(TextView.class, v);
			TextView widget = (TextView) v;
			String name = widget.getText().toString();
			assertEquals("Checking for name", theName, name);
		}
	}
	
	public void fireEvent (int widgetId, String widgetType, String eventType) {
		fireEvent(widgetId, widgetType, eventType, null);
	}

	public void fireEvent (int widgetId, String widgetType, String eventType, String value) {
		View v = getWidget(widgetId);
		if (v == null) {
			v = theActivity.findViewById(widgetId);
		}		
		if (eventType == "click") {
			TouchUtils.clickView(this, v);
		} else if (eventType == "swapTab" && value!=null) {
			if (v instanceof TabHost) {
				swapTab ((TabHost)v, value);
			} else {
				swapTab (this.tabs, value);
			}
		} else {
			return;
		}
		this.theActivity = solo.getCurrentActivity();
		solo.sleep(SLEEP_AFTER_EVENT);
	}
	
	public void setInput (int widgetId, String widgetType, String value) {
		View v = getWidget(widgetId);
		if (v == null) {
			v = theActivity.findViewById(widgetId);
		}
		if (widgetType == "editText") {
			solo.enterText((EditText)v, value);
		} else if (widgetType == "button") {
			TouchUtils.clickView(this, v);
		}
	}
	
	private void swapTab (TabHost t, String tab) {
		swapTab (t, Integer.valueOf(tab));
	}
	
	private void swapTab (final TabHost t, int num) {
		final int n = Math.min(this.tabNum, Math.max(1,num))-1;
		Log.i("nofatclips", "Swapping to tab " + num);
		getActivity().runOnUiThread(new Runnable() {
			public void run() {
				t.setCurrentTab(n);
			}
		});
		this.getInstrumentation().waitForIdleSync();
	}
	
	public void debug (String msg) {
		Log.d("nofatclips",msg);
		for (View x: getWidgets().values()) {
			if (x instanceof TextView) {
				Log.i("nofatclips", ((TextView)x).getText().toString() + "[" + x.toString() + "]: " + x.getId());
			} else {
				Log.i("nofatclips", "[" + x.toString() + "]: " + x.getId());
			}
		}
	}
